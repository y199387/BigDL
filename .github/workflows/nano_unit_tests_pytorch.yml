name: Nano Unit Tests PyTorch

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ just-for-test ]
  pull_request:
    branches: [ main ]
    paths:
      - 'python/nano/**'
      - '.github/workflows/nano_unit_tests_pytorch.yml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  nano-unit-test-pytorch:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.7"]
        pytorch-version: [
          "torch==1.9.0+cpu torchvision==0.10.0+cpu",
          "torch==1.10.1+cpu torchvision==0.11.2+cpu",
          "torch==1.12.0+cpu torchvision==0.13.0+cpu",
          ""
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools==58.0.4
          python -m pip install --upgrade wheel

      - name: Run Nano-init test
        shell: bash
        run: |
          $CONDA/bin/conda create -n bigdl-init -y python==3.7.10 setuptools==58.0.4
          source $CONDA/bin/activate bigdl-init
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            pip install ${{matrix.pytorch-version}} -f https://download.pytorch.org/whl/torch_stable.html
          fi
          source bigdl-nano-init
          if [ 0"$LD_PRELOAD" = "0" ]; then
            exit 1
          else
            echo "Set environment variable successfully."
          fi
          source $CONDA/bin/deactivate
          if [ ! 0"$LD_PRELOAD" = "0" ]; then
            exit 1
          else
            echo "Unset environment variable successfully while deactivating conda environment."
          fi
          source $CONDA/bin/activate bigdl-init
          if [ 0"$LD_PRELOAD" = "0" ]; then
            exit 1
          else
            echo "Setup environment variable successfully while activating conda environment."
          fi
          pip uninstall -y bigdl-nano
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n bigdl-init --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run PyTorch unit tests
        shell: bash
        run: |
          $CONDA/bin/conda create -n pytorch -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate pytorch
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          pip install pytest
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            pip install ${{matrix.pytorch-version}} -f https://download.pytorch.org/whl/torch_stable.html
          fi
          source bigdl-nano-init
          bash python/nano/test/run-nano-pytorch-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n pytorch --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run PyTorch unit tests(Ray)
        shell: bash
        run: |
          $CONDA/bin/conda create -n ray-pytorch -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate ray-pytorch
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          pip install pytest
          pip install ray[default]==1.11.0 prometheus_client==0.13.0
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            pip install ${{matrix.pytorch-version}} -f https://download.pytorch.org/whl/torch_stable.html
          fi
          source bigdl-nano-init
          bash python/nano/test/run-nano-pytorch-ray-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n ray-pytorch --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run PyTorch unit tests (OpenVINO)
        shell: bash
        run: |
          $CONDA/bin/conda create -n openvino-pytorch -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate openvino-pytorch
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          pip install pytest
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            pip install ${{matrix.pytorch-version}} -f https://download.pytorch.org/whl/torch_stable.html
          fi
          pip install openvino-dev
          source bigdl-nano-init
          bash python/nano/test/run-nano-pytorch-openvino-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n openvino-pytorch --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run PyTorch unit tests (Automl)
        shell: bash
        run: |
          $CONDA/bin/conda create -n nano-automl-pytorch -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate nano-automl-pytorch
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          pip install pytest
          pip install ConfigSpace
          pip install optuna
          source bigdl-nano-init
          bash python/nano/test/run-nano-automl-pytorch-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n nano-automl-pytorch --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run PyTorch unit tests (INC)
        shell: bash
        run: |
          $CONDA/bin/conda create -n inc-pytorch -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate inc-pytorch
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          pip install pytest
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            pip install ${{matrix.pytorch-version}} -f https://download.pytorch.org/whl/torch_stable.html
          fi
          pip install neural-compressor==1.11
          source bigdl-nano-init
          bash python/nano/test/run-nano-pytorch-inc-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n inc-pytorch --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run PyTorch unit tests (ONNX)
        shell: bash
        run: |
          $CONDA/bin/conda create -n onnx-pytorch -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate onnx-pytorch
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            pip install ${{matrix.pytorch-version}} -f https://download.pytorch.org/whl/torch_stable.html
          fi
          pip install pytest
          pip install neural-compressor==1.11
          pip install onnxruntime onnxruntime-extensions onnx
          source bigdl-nano-init
          bash python/nano/test/run-nano-pytorch-onnx-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n onnx-pytorch --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
      
  nano-unit-test-benchmark-sanity:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.7"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools==58.0.4
          python -m pip install --upgrade wheel

      - name: Run benchmark sanity check
        shell: bash
        run: bash python/nano/benchmark/start_benchmark.sh
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
          SANITY_CHECK: "1"

  nano-unit-test-ipex:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.7"]
        pytorch-version: [
          # The reason why ipex1.10 is not currently supported is that the optimization of ipex1.10
          # will change the require_grad attribute of layers, which will make some tests of nano fail.
          "torch==1.9.0+cpu torchvision==0.10.0+cpu torch_ipex==1.9.0",
          "",
          "torch==1.12.0+cpu torchvision==0.13.0+cpu intel_extension_for_pytorch==1.12.0"
          # "torch==1.10.1+cpu torchvision==0.11.2+cpu intel_extension_for_pytorch==1.10.0 psutil"
          ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools==58.0.4
          python -m pip install --upgrade wheel

      - name: Run PyTorch IPEX unit tests
        shell: bash
        run: |
          $CONDA/bin/conda create -n pytorch-ipex -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate pytorch-ipex
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false pytorch
          pip install pytest
          if [ ! -z "${{matrix.pytorch-version}}" ]; then
            requirements=(${{matrix.pytorch-version}})
            pip install ${requirements[0]} ${requirements[1]} -f https://download.pytorch.org/whl/torch_stable.html
            pip install ${requirements[2]} -f https://software.intel.com/ipex-whl-stable
          fi
          source bigdl-nano-init
          bash python/nano/test/run-nano-pytorch-tests-ipex.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n pytorch-ipex --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}